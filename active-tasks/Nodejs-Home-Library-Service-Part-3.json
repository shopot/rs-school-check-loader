{
  "taskName": "Node.js Home Library Service: Part 3",
  "github": "https://github.com/AlreadyBored/nodejs-assignments/blob/main/assignments/logging-error-authentication-authorization/assignment.md",
  "information": "The maximum number of points is 360. Cross-check criteria:",
  "criteria": [
    {
      "type": "title",
      "title": "Basic Scope"
    },
    {
      "type": "title",
      "title": "Logging & Error Handling"
    },
    {
      "type": "subtask",
      "text": "Custom LoggingService is implemented and used for logging",
      "max": 20
    },
    {
      "type": "subtask",
      "text": "Custom Exception Filter is implemented and used for handling exceptions during request processing",
      "max": 20
    },
    {
      "type": "subtask",
      "text": "Logging for request (of at least url, query parameters, body) and response with status code is implemented.",
      "max": 20
    },
    {
      "type": "subtask",
      "text": "Error handling is implemented including sending response with an appropriate http status code and errors logging.",
      "max": 20
    },
    {
      "type": "subtask",
      "text": "Error handling and logging is implemented for uncaughtException event.",
      "max": 10
    },
    {
      "type": "subtask",
      "text": "Error handling and logging is implemented for unhandledRejection event.",
      "max": 10
    },
    {
      "type": "title",
      "title": "Authentication and Authorization"
    },
    {
      "type": "subtask",
      "text": "Route /auth/signup implemented correctly, related logic is divided between controller and corresponding service",
      "max": 30
    },
    {
      "type": "subtask",
      "text": "Route /auth/login has been implemented, related logic is divided between controller and corresponding service",
      "max": 30
    },
    {
      "type": "subtask",
      "text": "User password saved into database as hash",
      "max": 10
    },
    {
      "type": "subtask",
      "text": "Access Token is implemented,JWT payload contains userId and login, secret key is saved in .env.",
      "max": 20
    },
    {
      "type": "subtask",
      "text": "Authentication is required for the access to all routes except /auth/signup, /auth/login, /doc and /.",
      "max": 40
    },
    {
      "type": "subtask",
      "text": "Separate module is implemented within application scope to check that all requests to all routes except mentioned above contain required JWT token",
      "max": 10
    },
    {
      "type": "title",
      "title": "Advanced Scope"
    },
    {
      "type": "title",
      "title": "Logging & Error Handling"
    },
    {
      "type": "subtask",
      "text": "Logs are written to a file.",
      "max": 20
    },
    {
      "type": "subtask",
      "text": "Logs files are rotated with size.",
      "max": 10
    },
    {
      "type": "subtask",
      "text": "Add environment variable to specify max file size.",
      "max": 10
    },
    {
      "type": "subtask",
      "text": "Error logs are written to a separate file (either only to a separate file or in addition to logging into a common file).",
      "max": 10
    },
    {
      "type": "subtask",
      "text": "Add environment variable to specify logging level and corresponding functionality. Logs with configured level to be registered as well as other higher priority levels. For example if you set level 2, all messages with levels 0, 1 and 2 should be logged. You should use Nest.js logging levels.",
      "max": 20
    },
    {
      "type": "title",
      "title": "Authentication and Authorization"
    },
    {
      "type": "subtask",
      "text": "Route /auth/refresh implemented correctly, related logic is divided between controller and corresponding service",
      "max": 30
    },
    {
      "type": "penalty",
      "text": "<b>-10</b> For each failing test, for authentication and authorization module tests to be run with npm run test:auth (-10 points per each)",
      "max": -10
    },
    {
      "type": "penalty",
      "text": "<b>-30%</b> of max task score Commits after deadline, except commits that affect only Readme.md, .gitignore, etc.",
      "max": 0
    },
    {
      "type": "penalty",
      "text": "<b>-10</b> points for each error either on npm run lint on the basis of the local config or for compilation errors on the basis of the local tsconfig (errors not warnings). (-10 points per each)",
      "max": -10
    },
    {
      "type": "penalty",
      "text": "<b>-20</b> No separate development branch",
      "max": -20
    },
    {
      "type": "penalty",
      "text": "<b>-20</b> No Pull Request",
      "max": -20
    },
    {
      "type": "penalty",
      "text": "<b>-10</b> Pull Request description is incorrect",
      "max": -10
    },
    {
      "type": "penalty",
      "text": "<b>-20</b> Less than 3 commits in the development branch, not including commits that make changes only to Readme.md or similar files (tsconfig.json, .gitignore, .prettierrc.json, etc.)",
      "max": -20
    }
  ]
}
